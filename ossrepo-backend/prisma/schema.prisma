generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id        String          @id @default(uuid())
  email          String          @unique
  name           String?
  created_at     DateTime        @default(now())
  userWatchlists UserWatchlist[]

  @@map("users")
}

model Package {
  package_name String
  downloads    Int?
  last_updated DateTime?
  stars        Int?
  contributors Int?
  pushed_at    DateTime?
  risk_score   Float?
  fetched_at   DateTime?
  repo_url     String      @unique
  repo_name    String
  package_id   String      @id @default(uuid())
  watchlists   Watchlist[]
}

model Watchlist {
  watchlist_id                     String          @id @default(uuid())
  alert_cve_ids                    String[]
  updated_at                       DateTime?
  default_branch                   String?
  latest_commit_sha                String?
  commits_since_last_health_update Int?
  package_id                       String
  userWatchlistEntries             UserWatchlist[]
  package                          Package         @relation(fields: [package_id], references: [package_id])
}

model UserWatchlist {
  id           String    @id @default(uuid())
  user_id      String
  watchlist_id String
  added_at     DateTime  @default(now())
  alerts       String?
  notes        String?
  created_at   DateTime  @default(now())
  slack        Slack?
  jira         Jira?
  user         User      @relation(fields: [user_id], references: [user_id])
  watchlist    Watchlist @relation(fields: [watchlist_id], references: [watchlist_id])

  @@index([user_id])
  @@index([watchlist_id])
}

model Slack {
  id            String        @id @default(uuid())
  slack_token   String
  slack_channel String?
  userWatchlist UserWatchlist @relation(fields: [id], references: [id])
}

model Jira {
  id               String        @id @default(uuid())
  webtrigger_url   String
  project_key      String?
  userWatchlist UserWatchlist @relation(fields: [id], references: [id])
}
